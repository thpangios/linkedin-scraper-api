{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import puppeteer, { Page, Browser } from 'puppeteer';\nimport treeKill from 'tree-kill';\n\nimport blockedHostsList from './blocked-hosts';\nimport { getDurationInDays, formatDate, getCleanText, getLocationFromText, statusLog, getHostname, Location } from './utils';\nimport { SessionExpired } from './errors';\n\nexport interface Profile {\n  fullName: string | null;\n  title: string | null;\n  location: Location | null;\n  photo: string | null;\n  description: string | null;\n  url: string;\n}\n\ninterface RawProfile {\n  fullName: string | null;\n  title: string | null;\n  location: string | null;\n  photo: string | null;\n  description: string | null;\n  url: string;\n}\n\nexport interface Experience {\n  title: string | null;\n  company: string | null;\n  employmentType: string | null;\n  location: Location | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\ninterface RawExperience {\n  title: string | null;\n  company: string | null;\n  employmentType: string | null;\n  location: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface Education {\n  schoolName: string | null;\n  degreeName: string | null;\n  fieldOfStudy: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  durationInDays: number | null;\n}\n\ninterface RawEducation {\n  schoolName: string | null;\n  degreeName: string | null;\n  fieldOfStudy: string | null;\n  startDate: string | null;\n  endDate: string | null;\n}\n\nexport interface VolunteerExperience {\n  title: string | null;\n  company: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\ninterface RawVolunteerExperience {\n  title: string | null;\n  company: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface Skill {\n  skillName: string | null;\n  endorsementCount: number | null;\n}\n\ninterface ScraperUserDefinedOptions {\n  sessionCookieValue: string;\n  keepAlive?: boolean;\n  userAgent?: string;\n  timeout?: number;\n  headless?: boolean | 'new' | 'shell';\n}\n\ninterface ScraperOptions {\n  sessionCookieValue: string;\n  keepAlive: boolean;\n  userAgent: string;\n  timeout: number;\n  headless: boolean | 'new' | 'shell';\n}\n\n// Modern Puppeteer v24+ compatible launch options type\ntype ModernPuppeteerLaunchOptions = Parameters<typeof puppeteer.launch>[0];\n\nasync function smartScroll(page: Page): Promise<void> {\n  await page.evaluate(async (): Promise<void> => {\n    await new Promise<void>((resolve): void => {\n      let totalHeight = 0;\n      const distance = 400;\n      const maxScrolls = 10;\n      let scrollCount = 0;\n      \n      const timer = setInterval((): void => {\n        const scrollHeight = document.body.scrollHeight;\n        window.scrollBy(0, distance);\n        totalHeight += distance;\n        scrollCount++;\n\n        // Stop if we've reached the bottom or made too many scrolls\n        if (totalHeight >= scrollHeight - window.innerHeight || scrollCount >= maxScrolls) {\n          clearInterval(timer);\n          resolve();\n        }\n      }, 200);\n    });\n  });\n}\n\nexport class LinkedInProfileScraper {\n  readonly options: ScraperOptions = {\n    sessionCookieValue: '',\n    keepAlive: false,\n    timeout: 60000,\n    userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',\n    headless: 'new'\n  };\n\n  private browser: Browser | null = null;\n\n  constructor(userDefinedOptions: ScraperUserDefinedOptions) {\n    const logSection = 'constructing';\n    const errorPrefix = 'Error during setup.';\n\n    if (!userDefinedOptions.sessionCookieValue) {\n      throw new Error(`${errorPrefix} Option \"sessionCookieValue\" is required.`);\n    }\n    \n    if (typeof userDefinedOptions.sessionCookieValue !== 'string') {\n      throw new Error(`${errorPrefix} Option \"sessionCookieValue\" needs to be a string.`);\n    }\n    \n    if (userDefinedOptions.userAgent && typeof userDefinedOptions.userAgent !== 'string') {\n      throw new Error(`${errorPrefix} Option \"userAgent\" needs to be a string.`);\n    }\n\n    if (userDefinedOptions.keepAlive !== undefined && typeof userDefinedOptions.keepAlive !== 'boolean') {\n      throw new Error(`${errorPrefix} Option \"keepAlive\" needs to be a boolean.`);\n    }\n   \n    if (userDefinedOptions.timeout !== undefined && typeof userDefinedOptions.timeout !== 'number') {\n      throw new Error(`${errorPrefix} Option \"timeout\" needs to be a number.`);\n    }\n    \n    if (userDefinedOptions.headless !== undefined && \n        typeof userDefinedOptions.headless !== 'boolean' && \n        userDefinedOptions.headless !== 'new' && \n        userDefinedOptions.headless !== 'shell') {\n      throw new Error(`${errorPrefix} Option \"headless\" needs to be a boolean, 'new', or 'shell'.`);\n    }\n\n    this.options = Object.assign(this.options, userDefinedOptions);\n    statusLog(logSection, `Using options: ${JSON.stringify({ ...this.options, sessionCookieValue: '[REDACTED]' })}`);\n  }\n\n  public setup = async (): Promise<void> => {\n    const logSection = 'setup';\n\n    try {\n      statusLog(logSection, `Launching Puppeteer with Chrome for Testing...`);\n\n      const launchOptions: ModernPuppeteerLaunchOptions = {\n        headless: this.options.headless,\n        args: [\n          '--no-sandbox',\n          '--disable-setuid-sandbox',\n          '--disable-blink-features=AutomationControlled',\n          '--exclude-switches=enable-automation',\n          '--disable-extensions-file-access-check',\n          '--disable-extensions-http-throttling',\n          '--disable-extensions-except',\n          '--disable-plugins',\n          '--disable-hang-monitor',\n          '--disable-web-security',\n          '--disable-features=site-per-process,TranslateUI,VizDisplayCompositor',\n          '--disable-dev-shm-usage',\n          '--disable-accelerated-2d-canvas',\n          '--disable-gpu',\n          '--window-size=1920,1080',\n          '--no-first-run',\n          '--no-default-browser-check',\n          '--disable-default-apps',\n          '--disable-popup-blocking',\n          '--disable-prompt-on-repost',\n          '--disable-backgrounding-occluded-windows',\n          '--disable-renderer-backgrounding',\n          '--disable-features=Translate',\n          '--disable-ipc-flooding-protection',\n          '--enable-features=NetworkService,NetworkServiceLogging',\n          '--force-color-profile=srgb',\n          '--metrics-recording-only',\n          '--use-mock-keychain',\n          '--disable-background-timer-throttling',\n          '--disable-backgrounding-occluded-windows',\n          '--disable-renderer-backgrounding',\n          '--disable-field-trial-config',\n          '--disable-back-forward-cache',\n          '--enable-features=NetworkService',\n          '--disable-features=ImprovedCookieControls,LazyFrameLoading,GlobalMediaControls,DestroyProfileOnBrowserClose,MediaRouter,DialMediaRouteProvider,AcceptCHFrame,AutoExpandDetailsElement,CertificateTransparencyComponentUpdater,AvoidUnnecessaryBeforeUnloadCheckSync,Translate',\n          '--aggressive-cache-discard',\n          '--disable-background-networking',\n          '--disable-default-apps',\n          '--disable-domain-reliability',\n          '--disable-component-update',\n          '--disable-client-side-phishing-detection'\n        ],\n        timeout: this.options.timeout,\n        ignoreDefaultArgs: ['--enable-automation', '--enable-blink-features=IdleDetection'],\n        ignoreHTTPSErrors: true\n      };\n\n      this.browser = await puppeteer.launch(launchOptions);\n\n      statusLog(logSection, 'Chrome for Testing launched successfully!');\n\n      // Verify login status\n      await this.checkIfLoggedIn();\n      statusLog(logSection, 'Setup completed successfully!');\n\n    } catch (err) {\n      await this.close();\n      statusLog(logSection, 'An error occurred during setup.');\n      throw err;\n    }\n  };\n\n  private createPage = async (): Promise<Page> => {\n    const logSection = 'setup page';\n\n    if (!this.browser) {\n      throw new Error('Browser not set.');\n    }\n\n    const blockedResources = [\n      'image', 'media', 'font', 'texttrack', 'object', 'beacon', \n      'csp_report', 'imageset', 'stylesheet'\n    ];\n\n    try {\n      const pages = await this.browser.pages();\n      const page = pages.length > 0 ? pages[0] : await this.browser.newPage();\n\n      // Close extra pages\n      const allPages = await this.browser.pages();\n      for (let i = 1; i < allPages.length; i++) {\n        await allPages[i].close();\n      }\n\n      statusLog(logSection, `Blocking resources: ${blockedResources.join(', ')}`);\n\n      // Enhanced anti-detection with modern typing\n      await page.evaluateOnNewDocument((): void => {\n        // Override the `plugins` property to use a custom getter\n        Object.defineProperty(navigator, 'plugins', {\n          get: () => [1, 2, 3, 4, 5]\n        });\n\n        // Override the `languages` property to use a custom getter\n        Object.defineProperty(navigator, 'languages', {\n          get: () => ['en-US', 'en']\n        });\n\n        // Override the `webdriver` property\n        Object.defineProperty(navigator, 'webdriver', {\n          get: () => false\n        });\n\n        // Mock chrome object\n        (window as any).chrome = {\n          runtime: {}\n        };\n\n        // Modern PermissionStatus object implementation\n        const originalQuery = window.navigator.permissions.query;\n        window.navigator.permissions.query = (parameters: PermissionDescriptor): Promise<PermissionStatus> => {\n          if (parameters.name === 'notifications') {\n            return Promise.resolve({\n              state: Notification.permission as PermissionState,\n              name: 'notifications' as PermissionName,\n              onchange: null,\n              addEventListener: () => {},\n              removeEventListener: () => {},\n              dispatchEvent: () => false\n            } as PermissionStatus);\n          }\n          return originalQuery.call(window.navigator.permissions, parameters);\n        };\n\n        // Randomize canvas fingerprint\n        const getContext = HTMLCanvasElement.prototype.getContext;\n        HTMLCanvasElement.prototype.getContext = function(this: HTMLCanvasElement, ...args: any[]) {\n          if (args[0] === '2d') {\n            const context = getContext.apply(this, args);\n            if (context) {\n              const originalFillText = (context as CanvasRenderingContext2D).fillText;\n              (context as CanvasRenderingContext2D).fillText = function(...textArgs: any[]) {\n                return originalFillText.apply(this, textArgs as [string, number, number, number?]);\n              };\n            }\n            return context;\n          }\n          return getContext.apply(this, args);\n        };\n      });\n\n      const blockedHosts = this.getBlockedHosts();\n      statusLog(logSection, `Blocking scripts from ${Object.keys(blockedHosts).length} unwanted hosts.`);\n\n      await page.setRequestInterception(true);\n\n      page.on('request', (req) => {\n        const resourceType = req.resourceType();\n        const url = req.url();\n        const hostname = getHostname(url);\n\n        // Block unnecessary resources\n        if (blockedResources.includes(resourceType)) {\n          return req.abort();\n        }\n\n        // Block known tracking domains\n        if (hostname && blockedHosts[hostname]) {\n          statusLog('blocked', `${resourceType}: ${hostname}`);\n          return req.abort();\n        }\n\n        // Allow the request\n        return req.continue();\n      });\n\n      await page.setUserAgent(this.options.userAgent);\n\n      await page.setViewport({\n        width: 1920,\n        height: 1080,\n        deviceScaleFactor: 1\n      });\n\n      // Set extra headers to appear more human\n      await page.setExtraHTTPHeaders({\n        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n        'Accept-Language': 'en-US,en;q=0.9',\n        'Accept-Encoding': 'gzip, deflate, br',\n        'DNT': '1',\n        'Connection': 'keep-alive',\n        'Upgrade-Insecure-Requests': '1'\n      });\n\n      statusLog(logSection, 'Setting LinkedIn session cookie...');\n\n      await page.setCookie({\n        name: 'li_at',\n        value: this.options.sessionCookieValue,\n        domain: '.linkedin.com',\n        path: '/',\n        httpOnly: true,\n        secure: true\n      });\n\n      statusLog(logSection, 'Session cookie set successfully!');\n\n      return page;\n    } catch (err) {\n      await this.close();\n      statusLog(logSection, 'An error occurred during page setup.');\n      throw err;\n    }\n  };\n\n  private getBlockedHosts = (): Record<string, boolean> => {\n    const blockedHostsArray = blockedHostsList.split('\\n');\n\n    let blockedHostsObject = blockedHostsArray.reduce((prev, curr) => {\n      const frags = curr.split(' ');\n      if (frags.length > 1 && frags[0] === '0.0.0.0') {\n        prev[frags[1].trim()] = true;\n      }\n      return prev;\n    }, {} as Record<string, boolean>);\n\n    // Add additional known tracking domains\n    return {\n      ...blockedHostsObject,\n      'static.chartbeat.com': true,\n      'scdn.cxense.com': true,\n      'api.cxense.com': true,\n      'www.googletagmanager.com': true,\n      'connect.facebook.net': true,\n      'platform.twitter.com': true,\n      'tags.tiqcdn.com': true,\n      'smartlock.google.com': true,\n      'cdn.embedly.com': true\n    };\n  };\n\n  public close = (page?: Page): Promise<void> => {\n    return new Promise<void>(async (resolve, reject): Promise<void> => {\n      const loggerPrefix = 'close';\n\n      if (page) {\n        try {\n          statusLog(loggerPrefix, 'Closing page...');\n          await page.close();\n          statusLog(loggerPrefix, 'Page closed successfully!');\n        } catch (err) {\n          reject(err);\n          return;\n        }\n      }\n\n      if (this.browser) {\n        try {\n          statusLog(loggerPrefix, 'Closing browser...');\n          await this.browser.close();\n          statusLog(loggerPrefix, 'Browser closed successfully!');\n\n          const browserProcess = this.browser.process();\n          const browserProcessPid = browserProcess?.pid;\n\n          if (browserProcessPid) {\n            statusLog(loggerPrefix, `Killing browser process pid: ${browserProcessPid}...`);\n\n            treeKill(browserProcessPid, 'SIGKILL', (err) => {\n              if (err) {\n                reject(`Failed to kill browser process pid: ${browserProcessPid}`);\n                return;\n              }\n              statusLog(loggerPrefix, `Browser process ${browserProcessPid} killed successfully.`);\n              resolve();\n            });\n          } else {\n            resolve();\n          }\n        } catch (err) {\n          reject(err);\n        }\n      } else {\n        resolve();\n      }\n    });\n  };\n\n  public checkIfLoggedIn = async (): Promise<void> => {\n    const logSection = 'checkIfLoggedIn';\n    const page = await this.createPage();\n\n    statusLog(logSection, 'Checking LinkedIn login status...');\n\n    try {\n      await page.goto('https://www.linkedin.com/feed', {\n        waitUntil: 'networkidle2',\n        timeout: this.options.timeout\n      });\n\n      // Use modern page.waitForTimeout instead of workarounds\n      await page.waitForTimeout(2000);\n\n      const currentUrl = page.url();\n      const isLoggedIn = currentUrl.includes('/feed') || currentUrl.includes('/in/');\n\n      await page.close();\n\n      if (isLoggedIn) {\n        statusLog(logSection, 'Login verified - session is active!');\n      } else {\n        const errorMessage = 'Session expired! Please update your li_at cookie value.';\n        statusLog(logSection, errorMessage);\n        throw new SessionExpired(errorMessage);\n      }\n    } catch (err) {\n      await page.close();\n      if (err instanceof SessionExpired) {\n        throw err;\n      }\n      throw new Error(`Login check failed: ${(err as Error).message}`);\n    }\n  };\n\n  /**\n   * Modern LinkedIn Profile Scraper - 2025 Edition\n   * Optimized for Puppeteer 24.14.0 with Chrome for Testing\n   */\n  public run = async (profileUrl: string): Promise<{\n    userProfile: Profile;\n    experiences: Experience[];\n    education: Education[];\n    volunteerExperiences: VolunteerExperience[];\n    skills: Skill[];\n  }> => {\n    const logSection = 'run';\n    const scraperSessionId = Date.now();\n\n    if (!this.browser) {\n      throw new Error('Browser is not set. Please run the setup method first.');\n    }\n\n    if (!profileUrl) {\n      throw new Error('No profileUrl given.');\n    }\n\n    if (!profileUrl.includes('linkedin.com/')) {\n      throw new Error('The given URL to scrape is not a linkedin.com url.');\n    }\n\n    try {\n      const page = await this.createPage();\n      \n      statusLog(logSection, `🎯 Navigating to: ${profileUrl}`, scraperSessionId);\n\n      await page.goto(profileUrl, {\n        waitUntil: 'networkidle0',\n        timeout: this.options.timeout\n      });\n\n      statusLog(logSection, '📄 LinkedIn profile page loaded!', scraperSessionId);\n\n      // Wait for main content\n      await page.waitForSelector('main', { timeout: 15000 });\n      \n      // Smart scrolling to load all content\n      statusLog(logSection, '📜 Loading all profile content...', scraperSessionId);\n      await smartScroll(page);\n      \n      // Wait for dynamic content to stabilize\n      await page.waitForTimeout(3000);\n\n      statusLog(logSection, '🔍 Extracting profile data using modern techniques...', scraperSessionId);\n\n      // Extract profile data using JSON-LD + modern HTML selectors\n      const rawUserProfileData: RawProfile = await page.evaluate((): RawProfile => {\n        const url = window.location.href;\n        \n        // Try JSON-LD first (most reliable)\n        const jsonLdScripts = document.querySelectorAll('script[type=\"application/ld+json\"]');\n        let profileData: any = {};\n        \n        for (const script of jsonLdScripts) {\n          try {\n            const data = JSON.parse(script.textContent || '');\n            if (data['@graph']) {\n              const person = data['@graph'].find((item: any) => item['@type'] === 'Person');\n              if (person) {\n                profileData = person;\n                break;\n              }\n            } else if (data['@type'] === 'Person') {\n              profileData = data;\n              break;\n            }\n          } catch {\n            continue;\n          }\n        }\n        \n        // Modern HTML selectors with multiple fallbacks\n        const fullName = profileData.name || \n          document.querySelector('h1.text-heading-xlarge')?.textContent?.trim() ||\n          document.querySelector('h1')?.textContent?.trim() ||\n          null;\n          \n        const title = profileData.jobTitle || \n          document.querySelector('.text-body-medium.break-words')?.textContent?.trim() ||\n          document.querySelector('.pv-text-details__left-panel h2')?.textContent?.trim() ||\n          null;\n          \n        const location = (profileData.address?.addressLocality) || \n          document.querySelector('.text-body-small.inline.t-black--light.break-words')?.textContent?.trim() ||\n          null;\n          \n        const photo = profileData.image || \n          document.querySelector('img.pv-top-card-profile-picture__image')?.getAttribute('src') ||\n          document.querySelector('button img[width=\"200\"]')?.getAttribute('src') ||\n          null;\n          \n        const description = profileData.description || \n          document.querySelector('div.display-flex.full-width')?.textContent?.trim() ||\n          document.querySelector('.pv-about__summary-text')?.textContent?.trim() ||\n          null;\n\n        return { fullName, title, location, photo, description, url } as RawProfile;\n      });\n\n      const userProfile: Profile = {\n        ...rawUserProfileData,\n        fullName: getCleanText(rawUserProfileData.fullName),\n        title: getCleanText(rawUserProfileData.title),\n        location: rawUserProfileData.location ? getLocationFromText(rawUserProfileData.location) : null,\n        description: getCleanText(rawUserProfileData.description)\n      };\n\n      statusLog(logSection, `👤 Profile data extracted: ${userProfile.fullName || 'Unknown'}`, scraperSessionId);\n\n      // Extract experience data\n      statusLog(logSection, '💼 Extracting experience data...', scraperSessionId);\n\n      const rawExperiencesData: RawExperience[] = await page.evaluate((): RawExperience[] => {\n        const data: RawExperience[] = [];\n        \n        const experienceSelectors = [\n          'section[data-section=\"experience\"] ul li',\n          '#experience-section .pv-entity',\n          '.experience-section .pv-position-entity'\n        ];\n\n        let experienceNodes: NodeListOf<Element> | null = null;\n        \n        for (const selector of experienceSelectors) {\n          experienceNodes = document.querySelectorAll(selector);\n          if (experienceNodes.length > 0) break;\n        }\n\n        if (experienceNodes) {\n          // Use Array.from to properly iterate over NodeListOf<Element>\n          Array.from(experienceNodes).forEach((node): void => {\n            try {\n              const titleElement = node.querySelector('h3') || \n                                 node.querySelector('.mr1.t-bold span') ||\n                                 node.querySelector('[data-field=\"title\"]');\n              const title = titleElement?.textContent?.trim() || null;\n\n              const companyElement = node.querySelector('span.t-14.t-normal') ||\n                                   node.querySelector('.pv-entity__secondary-title');\n              const company = companyElement?.textContent?.replace(/·.*/, '')?.trim() || null;\n\n              const employmentTypeElement = node.querySelector('.pv-entity__secondary-title span');\n              const employmentType = employmentTypeElement?.textContent?.trim() || null;\n\n              const locationElement = node.querySelector('.t-14.t-black--light.t-normal') ||\n                                    node.querySelector('.pv-entity__location span:nth-child(2)');\n              const location = locationElement?.textContent?.trim() || null;\n\n              const dateElement = node.querySelector('.pv-entity__date-range span:nth-child(2)');\n              const dateText = dateElement?.textContent?.trim() || '';\n\n              const [startPart, endPart] = dateText.split('–').map(s => s?.trim());\n              const startDate = startPart || null;\n              const endDateIsPresent = endPart?.toLowerCase().includes('present') || false;\n              const endDate = (endPart && !endDateIsPresent) ? endPart : 'Present';\n\n              const descriptionElement = node.querySelector('.pv-entity__description') ||\n                                        node.querySelector('[data-field=\"description\"]');\n              const description = descriptionElement?.textContent?.trim() || null;\n\n              if (title || company) {\n                data.push({\n                  title, company, employmentType, location,\n                  startDate, endDate, endDateIsPresent, description\n                });\n              }\n            } catch {\n              // Skip problematic nodes\n            }\n          });\n        }\n\n        return data;\n      });\n\n      const experiences: Experience[] = rawExperiencesData.map((rawExp): Experience => {\n        const startDate = formatDate(rawExp.startDate);\n        const endDate = formatDate(rawExp.endDate) || null;\n        const durationInDays = rawExp.endDateIsPresent && startDate ? \n          getDurationInDays(startDate, new Date()) : \n          (startDate && endDate ? getDurationInDays(startDate, endDate) : null);\n\n        return {\n          ...rawExp,\n          title: getCleanText(rawExp.title),\n          company: getCleanText(rawExp.company),\n          employmentType: getCleanText(rawExp.employmentType),\n          location: rawExp.location ? getLocationFromText(rawExp.location) : null,\n          startDate, endDate,\n          endDateIsPresent: rawExp.endDateIsPresent,\n          durationInDays,\n          description: getCleanText(rawExp.description)\n        };\n      });\n\n      statusLog(logSection, `💼 Found ${experiences.length} experience entries`, scraperSessionId);\n\n      // Extract education data\n      statusLog(logSection, '🎓 Extracting education data...', scraperSessionId);\n\n      const rawEducationData: RawEducation[] = await page.evaluate((): RawEducation[] => {\n        const data: RawEducation[] = [];\n        \n        const educationSelectors = [\n          'section[data-section=\"education\"] ul li',\n          '#education-section .pv-entity',\n          '.education-section .pv-education-entity'\n        ];\n\n        let educationNodes: NodeListOf<Element> | null = null;\n        \n        for (const selector of educationSelectors) {\n          educationNodes = document.querySelectorAll(selector);\n          if (educationNodes.length > 0) break;\n        }\n\n        if (educationNodes) {\n          Array.from(educationNodes).forEach((node): void => {\n            try {\n              const schoolNameElement = node.querySelector('h3.pv-entity__school-name') ||\n                                      node.querySelector('.mr1.hoverable-link-text.t-bold');\n              const schoolName = schoolNameElement?.textContent?.trim() || null;\n\n              const degreeElement = node.querySelector('.pv-entity__degree-name .pv-entity__comma-item') ||\n                                  node.querySelector('.t-14.t-normal');\n              const degreeName = degreeElement?.textContent?.trim() || null;\n\n              const fieldElement = node.querySelector('.pv-entity__fos .pv-entity__comma-item');\n              const fieldOfStudy = fieldElement?.textContent?.trim() || null;\n\n              const dateElements = node.querySelectorAll('.pv-entity__dates time');\n              const startDate = dateElements[0]?.textContent?.trim() || null;\n              const endDate = dateElements[1]?.textContent?.trim() || null;\n\n              if (schoolName) {\n                data.push({ schoolName, degreeName, fieldOfStudy, startDate, endDate });\n              }\n            } catch {\n              // Skip problematic nodes\n            }\n          });\n        }\n\n        return data;\n      });\n\n      const education: Education[] = rawEducationData.map((rawEdu): Education => ({\n        ...rawEdu,\n        schoolName: getCleanText(rawEdu.schoolName),\n        degreeName: getCleanText(rawEdu.degreeName),\n        fieldOfStudy: getCleanText(rawEdu.fieldOfStudy),\n        startDate: formatDate(rawEdu.startDate),\n        endDate: formatDate(rawEdu.endDate),\n        durationInDays: getDurationInDays(formatDate(rawEdu.startDate), formatDate(rawEdu.endDate))\n      }));\n\n      statusLog(logSection, `🎓 Found ${education.length} education entries`, scraperSessionId);\n\n      // Extract volunteer experiences\n      const rawVolunteerExperiences: RawVolunteerExperience[] = await page.evaluate((): RawVolunteerExperience[] => {\n        const data: RawVolunteerExperience[] = [];\n        const nodes = document.querySelectorAll('.volunteering-section ul li.ember-view');\n\n        Array.from(nodes).forEach((node): void => {\n          try {\n            const titleElement = node.querySelector('.pv-entity__summary-info h3');\n            const title = titleElement?.textContent?.trim() || null;\n            \n            const companyElement = node.querySelector('.pv-entity__summary-info span.pv-entity__secondary-title');\n            const company = companyElement?.textContent?.trim() || null;\n\n            const dateElement = node.querySelector('.pv-entity__date-range span:nth-child(2)');\n            const dateText = dateElement?.textContent?.trim() || '';\n            \n            const [startPart, endPart] = dateText.split('–').map(s => s?.trim());\n            const startDate = startPart || null;\n            const endDateIsPresent = endPart?.toLowerCase() === 'present' || false;\n            const endDate = (endPart && !endDateIsPresent) ? endPart : 'Present';\n\n            const descriptionElement = node.querySelector('.pv-entity__description');\n            const description = descriptionElement?.textContent?.trim() || null;\n\n            if (title) {\n              data.push({ title, company, startDate, endDate, endDateIsPresent, description });\n            }\n          } catch {\n            // Skip problematic nodes\n          }\n        });\n\n        return data;\n      });\n\n      const volunteerExperiences: VolunteerExperience[] = rawVolunteerExperiences.map((rawVol): VolunteerExperience => ({\n        ...rawVol,\n        title: getCleanText(rawVol.title),\n        company: getCleanText(rawVol.company),\n        description: getCleanText(rawVol.description),\n        startDate: formatDate(rawVol.startDate),\n        endDate: formatDate(rawVol.endDate),\n        durationInDays: getDurationInDays(formatDate(rawVol.startDate), formatDate(rawVol.endDate))\n      }));\n\n      // Extract skills\n      statusLog(logSection, '🏅 Extracting skills data...', scraperSessionId);\n\n      const skills: Skill[] = await page.evaluate((): Skill[] => {\n        const skillSelectors = [\n          '.pv-skill-categories-section ol > .ember-view',\n          'section[data-section=\"skills\"] ul li'\n        ];\n\n        let skillNodes: NodeListOf<Element> | null = null;\n        \n        for (const selector of skillSelectors) {\n          skillNodes = document.querySelectorAll(selector);\n          if (skillNodes.length > 0) break;\n        }\n\n        if (!skillNodes) return [];\n\n        return Array.from(skillNodes).map((node): Skill => {\n          try {\n            const skillNameElement = node.querySelector('.pv-skill-category-entity__name-text') ||\n                                   node.querySelector('.mr1.hoverable-link-text.t-bold');\n            const skillName = skillNameElement?.textContent?.trim() || null;\n\n            const endorsementElement = node.querySelector('.pv-skill-category-entity__endorsement-count');\n            const endorsementText = endorsementElement?.textContent?.trim() || '0';\n            const endorsementCount = parseInt(endorsementText.replace(/\\D/g, '')) || 0;\n\n            return { skillName, endorsementCount };\n          } catch {\n            return { skillName: null, endorsementCount: 0 };\n          }\n        }).filter((skill): skill is Skill => skill.skillName !== null);\n      });\n\n      statusLog(logSection, `🏅 Found ${skills.length} skills`, scraperSessionId);\n      statusLog(logSection, `✅ Profile scraping completed successfully!`, scraperSessionId);\n\n      if (!this.options.keepAlive) {\n        statusLog(logSection, '🔄 Closing browser session...');\n        await this.close(page);\n      } else {\n        statusLog(logSection, '💾 Keeping browser session alive in memory.');\n        await page.close();\n      }\n\n      return {\n        userProfile,\n        experiences,\n        education,\n        volunteerExperiences,\n        skills\n      };\n\n    } catch (err) {\n      await this.close();\n      statusLog(logSection, `❌ Scraping failed: ${(err as Error).message}`);\n      throw err;\n    }\n  };\n}"]}